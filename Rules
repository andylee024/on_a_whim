#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.


# ########################################################################################## 
#
# Compilation Rules
# * These rules describe actions that should be executed during compilation 
# * (filter, layout, snapshot)
#
# Notes:
#   - The directory that gets compiled is the /content directory so paths are relative to /content
#
# ########################################################################################## 

compile '/stylesheet/' do
end

compile '/assets/*/' do
end

compile '/blog/' do
  filter :haml
  layout 'default'
end

compile '/blog/*' do
  filter :pandoc, args: ['mathjax']
  filter :colorize_syntax, :default_colorizer => :pygmentsrb
  layout 'post'
  layout 'default'
end

compile '*' do
  if item.binary?
      # don't filter binary items
  else
  filter :pandoc, args: ['mathjax']
  layout 'post'
  layout 'default'
  end
end

# ########################################################################################## 
#
# Route Rules
# * These rules describe path where compiled items should be written to. 
#
# ########################################################################################## 
route '/stylesheet/' do
  '/style.css'
end

route '/blog/' do
  '/blog/index.html'
end

route '/blog/*' do
  [OutputDirectory(item), 'index.html'].join('/')
end

route '/assets/*/' do
  item.identifier.chop + '.' + item[:extension]
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier.chop + '.' + item[:extension]
  else
    item.identifier + 'index.html'
  end
end

# ########################################################################################## 
#
# Layout Rules
# * These rules describe the filter that should be used for a given layout.
#
# ########################################################################################## 
layout '*', :haml

